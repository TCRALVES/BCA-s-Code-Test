// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using repository;

#nullable disable

namespace repository.Migrations
{
    [DbContext(typeof(CASContext))]
    [Migration("20240710184446_create-bid-entity")]
    partial class createbidentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CAS.Models.DBEntities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CurrentHighestBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("Models.Models.DBEntities.AuctionedVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRemovedFromAuction")
                        .HasColumnType("bit");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("VehicleId");

                    b.ToTable("AuctionedVehicles");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionedVehicleId")
                        .HasColumnType("int");

                    b.Property<decimal>("OfferedBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctionedVehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Models.Models.DBEntities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Hatchback", b =>
                {
                    b.HasBaseType("Models.Models.DBEntities.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.ToTable("Hatchbacks");
                });

            modelBuilder.Entity("Models.Models.DBEntities.SUV", b =>
                {
                    b.HasBaseType("Models.Models.DBEntities.Vehicle");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.ToTable("SUVs");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Sedan", b =>
                {
                    b.HasBaseType("Models.Models.DBEntities.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.ToTable("Sedans");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Truck", b =>
                {
                    b.HasBaseType("Models.Models.DBEntities.Vehicle");

                    b.Property<decimal>("LoadCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("Models.Models.DBEntities.AuctionedVehicle", b =>
                {
                    b.HasOne("Models.Models.DBEntities.Auction", "Auction")
                        .WithMany("AuctionedVehicles")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.DBEntities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Bid", b =>
                {
                    b.HasOne("Models.Models.DBEntities.AuctionedVehicle", "AuctionedVehicle")
                        .WithMany()
                        .HasForeignKey("AuctionedVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAS.Models.DBEntities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuctionedVehicle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Vehicle", b =>
                {
                    b.HasOne("Models.Models.DBEntities.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Models.Models.DBEntities.Hatchback", b =>
                {
                    b.HasOne("Models.Models.DBEntities.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Models.Models.DBEntities.Hatchback", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Models.DBEntities.SUV", b =>
                {
                    b.HasOne("Models.Models.DBEntities.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Models.Models.DBEntities.SUV", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Models.DBEntities.Sedan", b =>
                {
                    b.HasOne("Models.Models.DBEntities.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Models.Models.DBEntities.Sedan", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Models.DBEntities.Truck", b =>
                {
                    b.HasOne("Models.Models.DBEntities.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Models.Models.DBEntities.Truck", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Models.DBEntities.Auction", b =>
                {
                    b.Navigation("AuctionedVehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
